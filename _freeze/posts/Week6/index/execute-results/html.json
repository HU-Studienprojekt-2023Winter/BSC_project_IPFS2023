{
  "hash": "5ae49a4808d673efb87a6dab92a5e0c9",
  "result": {
    "markdown": "---\ntitle: \"Week6: Grain development III\"\nauthor: \"Tien-Cheng\"\ndate: \"2023-05-23\"\ncategories: [R-intermediate]\n\ntoc-location: left\n# number-sections: true\nwebsite: \n  sidebar:\n    search: true\nformat:\n  html: \n    grid:\n      sidebar-width: 300px\n      body-width: 900px\n      margin-width: 300px\n      gutter-width: 1.5rem\n\nreference-location: margin\n---\n\n\n\n\nWelcome to the sixth course! You will learn more about `dataframe` wrangling:\n\n::: callout-note\n# Learning goals\n\n1.  data frame wrangling with `dplyr`\n2.  `ggplot()`\n:::\n\n::: callout-warning\n## Discussion\n\n1.  What is the component of `function()`? How could you document them?\n2.  How many data type can you remember?\n3.  How many ways could you match a cell in `dataframe`? which functions are available?\n4.  What is the function of `mutate()`, `filter()` and `select()`? (dplyr) 4.5 If you have multiple options in these function, what operator should you use for separation? 4.6 what is the meaning of `,` in `filter(condition1, condition2)`?\n5.  What are the elements of `ggplot()`\n6.  What are `|`,`&`,`!`,`==` and `%in%`? When to use them?\n7.  How do you have an overview of a `dataframe`? Which function can you use?\n8.  If you want to combine two columns into one, how many ways are available?\n:::\n\nTo match the pattern,how the order before or after `%in%` matters?\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(x=letters) %>% \n  filter(x%in%c('a','b'))\ndata.frame(x=letters) %>% \n  filter(c('a','b')%in%x)\n\nc('a','b')%in%letters\nletters%in%c('a','b')\n```\n:::\n\n\n### advanced mutate add-on :across\n\napply function for multiple columns\n\nacross( `column_name (e.g., \"y\")` or `column_position (e.g., 2)`,FUNCTION)\n\nFUNCTION examples\n\n1.  `function(x){x +1}`\n\nsyntax: `~{.x+1}`\n\n2.  `function(x){mean(x, ...)}`\n\nsyntax: `~{mean(.x,...)}`\n\n`...` means the additional option other than the first input argument. For example, `...` could be `na.rm=True`.\n\nNow here is one example of applying function to multiple columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate %>% \n  select(ends_with(\"Temperature\")) %>% \n  head(.,3) %>%\n  glimpse()\n\n\nclimate %>% \n  mutate(across(where(is.numeric),~{round(.x, digits = 2)})) %>%\n  # mutate(across(where(is.numeric),function(x){round(x, digits = 2)})) %>%\n  select(ends_with(\"Temperature\")) %>% \n  head(.,3) %>% \n  glimpse()\n\n# reduce your code chunk by using function\ndisplay <- function(x){\n  # subset dataframe and summarized for displaying purporse\n  # x: input data frame\n  x %>% \n    dplyr::select(ends_with(\"Temperature\")) %>% \n    head(.,3) %>% \n    dplyr::glimpse()\n}\n\nclimate %>% \n  mutate(across(where(is.numeric),function(x){round(x, digits = 2)})) %>%\n  display()\n```\n:::\n\n\n## Conclude your dataframe by groups\n\n![](wrangling.png)\n\n### group_by()\n\nLearn from [examples](https://dplyr.tidyverse.org/reference/group_by.html)!\n\n::: callout-warning\n## practice\n\n1.  read `climate.csv` from `data` folder using relative path and name it as `climate`.\n2.  find the sowing date (i.e., the first date) for each year (`DFG_year`) and each sowing treatment(`sowing_date`) from .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate_sub <- climate %>% \n  dplyr::select(DayTime,DailyMean_Temperature,DFG_year,sowing_date)\n```\n:::\n\n\n3.  calculate thermal time based on `DailyMean_Temperature` from `climate_sub`\n:::\n\n::: {.callout-tip collapse=\"true\"}\n## click for answer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthermal_time <- climate_sub%>%\n  group_by(DFG_year,sowing_date) %>% \n  mutate(DayTime=as.Date(DayTime,format=\"%Y-%m-%d\")) %>% \n  arrange(DayTime) %>% \n  mutate(ACC=cumsum(DailyMean_Temperature))\n\n\n# check with\nlibrary(ggplot2)\nmerge_thermal_time <- thermal_time%>% \n  merge(.,climate %>% \n          select(DayTime,DFG_year,sowing_date,Acc_Temperature)) \n\nmerge_thermal_time %>% \n  ggplot(.,aes(x=ACC,y=Acc_Temperature))+\n  geom_point(shape=0,size=.5,alpha=.5)+\n  geom_abline(intercept=0)+\n  facet_grid(sowing_date~DFG_year)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n:::\n\n## recommendation\n\n[purrr](https://www.rebeccabarter.com/blog/2019-08-19_purrr)\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}